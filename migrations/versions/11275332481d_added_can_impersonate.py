"""added can impersonate

Revision ID: 11275332481d
Revises: de1f187d2bb7
Create Date: 2025-04-25 18:43:52.172216

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '11275332481d'
down_revision = 'de1f187d2bb7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq_lead_source_api_key'), 'lead_source', ['api_key'])
    op.create_unique_constraint(op.f('uq_lead_source_source_name'), 'lead_source', ['source_name'])
    op.create_unique_constraint(op.f('uq_lead_status_status_name'), 'lead_status', ['status_name'])
    op.add_column('resource', sa.Column('can_impersonate', sa.Boolean(), nullable=False))
    op.create_unique_constraint(op.f('uq_role_name'), 'role', ['name'])
    op.create_unique_constraint(op.f('uq_trading_instrument_symbol'), 'trading_instrument', ['symbol'])
    op.create_unique_constraint(op.f('uq_user_email'), 'user', ['email'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_user_email'), 'user', type_='unique')
    op.drop_constraint(op.f('uq_trading_instrument_symbol'), 'trading_instrument', type_='unique')
    op.drop_constraint(op.f('uq_role_name'), 'role', type_='unique')
    op.drop_column('resource', 'can_impersonate')
    op.drop_constraint(op.f('uq_lead_status_status_name'), 'lead_status', type_='unique')
    op.drop_constraint(op.f('uq_lead_source_source_name'), 'lead_source', type_='unique')
    op.drop_constraint(op.f('uq_lead_source_api_key'), 'lead_source', type_='unique')
    # ### end Alembic commands ###
